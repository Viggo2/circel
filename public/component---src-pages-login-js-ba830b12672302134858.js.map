{"version":3,"file":"component---src-pages-login-js-ba830b12672302134858.js","mappings":"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","sources":["webpack://circel/./src/pages/login.js"],"sourcesContent":["import * as React from 'react'\nimport ReactDom from 'react-dom'\nimport * as ReactSpring from 'react-spring'\nimport * as uniUX from 'uniux'\nimport { Link } from 'gatsby'\nimport * as firebaseSetup from '../components/firebasesetup.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\nimport * as brandIcons from '@fortawesome/free-brands-svg-icons'\n\nconst Page = () => {\n  return (\n    <body>\n      <uniUX.Main pageType={'custom'} pageName={'Log in'} content={\n        <div className={uniUX.styles.halvedPageGrid}>\n          <div className={uniUX.styles.halvedPageHalf}>\n            <br /><br />\n            <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Log in</h1>\n\n            <input placeholder='Circel ID' style={{ width: '30vw' }} type='email' id='loginPageEmail' /><br /><br />\n\n            <input placeholder='Password' style={{ width: '30vw' }} type='password' id='loginPagePassword' /><br /><br /><br />\n\n            <uniUX.PrimaryButton text='Log in' onClick={function () {\n              uniUX.logIn(document.getElementById('loginPageEmail').value, document.getElementById('loginPagePassword').value).then(function (result) {\n                if (result == 'success') {\n                  window.open(window.location.href.split('=')[1], '_self')\n                } else {\n                  console.log(result)\n                  if (result == 'auth/invalid-email') {\n                    ReactDom.render(<span>That Circel ID doesn't match any Circel account.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/wrong-password') {\n                    ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/user-disabled') {\n                    ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n            }} />\n\n            <uniUX.SecondaryButton text='Sign up instead' onClick={function () { window.open('/signup?next=' + window.location.href.split('=')[1], '_self') }} />\n            <br /><br />\n            \n            {/* password reset button */}\n            <span id='resetPasswordBtn' style={{cursor: 'pointer'}} className={uniUX.styles.minorText} onClick={function(){\n              ReactDom.render(<span>Loading...</span>, document.getElementById('resetPasswordBtn'))\n              uniUX.resetPasswordEmail(document.getElementById('loginPageEmail').value, window.location.href.split('=')[1]).then(function(result){\n                if(result == 'success'){  \n                  ReactDom.render(<span>Password reset link sent to <em>{document.getElementById('loginPageEmail').value}</em>. Click to send again.</span>, document.getElementById('resetPasswordBtn'))\n                } else {\n                  ReactDom.render(<span>Password reset link couldn't be sent. Click to try again.</span>, document.getElementById('resetPasswordBtn'))\n                }\n              })\n            }}>Forgot Password</span>\n            <br/><br/>\n\n            {/* place where errors are rendered */}\n            <span id='errorRenderSpace' className={uniUX.styles.minorText} style={{ color: 'var(--red)' }}></span>\n            \n          </div>\n\n          <div className={uniUX.styles.halvedPageHalfSignup1}>\n            <br /><br /><br /><br /><br />\n            <h1 className={uniUX.styles.bigPageHeader} style={{ fontSize: 'max(2.5vw, 30px)', color: 'white' }}>Log in a different way</h1>\n\n            <uniUX.SecondaryButton styles={{ width: '25vw', textAlign: 'left', color: 'white' }} onClick={function () { \n              uniUX.logInGoogle().then(function (result) {\n                if (result == 'success') {\n                  window.open(window.location.href.split('=')[1], '_self')\n                } else {\n                  console.log(result)\n                  if (result == 'auth/popup-blocked') {\n                    ReactDom.render(<span>You need to allow the popup to log in with Google.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/wrong-password') {\n                    ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/user-disabled') {\n                    ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n             }} text={<span>&ensp;<FontAwesomeIcon icon={brandIcons.faGoogle} />&emsp;Log in with Google&ensp;</span>} /><br /><br />\n\n            <uniUX.SecondaryButton styles={{ width: '25vw', textAlign: 'left', color: 'white' }} onClick={function () { \n              uniUX.logInTwitter().then(function (result) {\n                if (result == 'success') {\n                  window.open(window.location.href.split('=')[1], '_self')\n                } else {\n                  console.log(result)\n                  if (result == 'auth/popup-blocked') {\n                    ReactDom.render(<span>You need to allow the popup to log in with Twitter.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/wrong-password') {\n                    ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/user-disabled') {\n                    ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n             }} text={<span>&ensp;<FontAwesomeIcon icon={brandIcons.faTwitter} />&emsp;Log in with Twitter&ensp;</span>} /><br /><br />\n          </div>\n        </div>\n      }>\n      </uniUX.Main>\n    </body>\n  )\n}\n\nexport default Page\n"],"names":["pageType","pageName","content","className","uniUX","style","textAlign","placeholder","width","type","id","text","onClick","document","getElementById","value","then","result","window","open","location","href","split","console","log","ReactDom","cursor","color","fontSize","styles","icon","brandIcons"],"sourceRoot":""}