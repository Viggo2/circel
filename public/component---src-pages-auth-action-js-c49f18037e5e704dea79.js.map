{"version":3,"file":"component---src-pages-auth-action-js-c49f18037e5e704dea79.js","mappings":"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","sources":["webpack://circel/./src/pages/authAction.js"],"sourcesContent":["import * as React from 'react'\nimport ReactDom from 'react-dom'\nimport * as ReactSpring from 'react-spring'\nimport * as uniUX from 'uniux'\nimport { Link } from 'gatsby'\nimport * as firebaseSetup from '../components/firebasesetup.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\nimport * as brandIcons from '@fortawesome/free-brands-svg-icons'\n\nvar url;\n\nclass Page extends React.Component {\n    render() {\n        return (<body id='authActionRenderSpace'>\n            <uniUX.Main pageType={'custom'} pageName={'Reset Password'} content={\n                <div className={uniUX.styles.halvedPageGrid}>\n                    <div className={uniUX.styles.halvedPageHalf}>\n                        <br /><br />\n                        {/* loading it up */}\n                        <span className={uniUX.styles.minorText}>\n                            Loading...\n                        </span>\n\n                    </div>\n                </div>\n            }>\n            </uniUX.Main>\n        </body>\n        )\n    }\n\n\n\n\n    componentDidMount(){\n        url = new URL(window.location.href)\n        var continueUrl\n        if (url.searchParams.get('continueUrl')) {\n            continueUrl = url.searchParams.get('continueUrl')\n        } else {\n            continueUrl = 'https://circel.co/'\n        }\n        if (url.searchParams.get('mode') == 'resetPassword') {\n            uniUX.verifyPasswordResetCode(url.searchParams.get('oobCode')).then(function (result) {\n                if (result == 'error') {\n                    ReactDom.render(<body>\n                        <uniUX.Main pageType={'custom'} pageName={'Reset Password'} content={\n                            <div className={uniUX.styles.halvedPageGrid}>\n                                <div className={uniUX.styles.halvedPageHalf}>\n                                    <br /><br />\n                                    <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Reset Password</h1>\n                                    {/* uh oh, that link's invalid! */}\n                                    <span className={uniUX.styles.minorText}>\n                                        This password reset link is invalid. It may have expired, or may have already been used.<br /><br />\n\n                                        You can get a new link by entering your Circel ID and clicking 'Forgot Password' at <Link to='/login'>Log In</Link>.\n                                    </span>\n\n                                </div>\n                            </div>\n                        }>\n                        </uniUX.Main>\n                    </body>,\n                    document.getElementById('authActionRenderSpace')\n                    )\n                } else {\n                    ReactDom.render(\n                        <body>\n                            <uniUX.Main pageType={'custom'} pageName={'Reset Password'} content={\n                                <div className={uniUX.styles.halvedPageGrid}>\n                                    <div className={uniUX.styles.halvedPageHalf}>\n                                        <br /><br />\n                                        <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Reset Password</h1>\n\n                                        <span className={uniUX.styles.minorText}>\n                                            You're resetting the password for the Circel account with the Circel ID <em>{result}</em>.\n                                        </span><br/><br/>\n\n\n                                        <input placeholder={'New Password'} style={{ width: '30vw' }} type='password' id='resetPasswordNewPassword' /><br /><br /><br />\n\n                                        <uniUX.PrimaryButton text='Reset Password' onClick={function () {\n                                            uniUX.completeResetPassword(result, document.getElementById('resetPasswordNewPassword').value, url.searchParams.get('oobCode')).then(function (result) {\n                                                window.open(continueUrl, '_self')\n                                            })\n                                        }} /><br /><br />\n                                        <span className={uniUX.styles.minorText}>\n                                            Clicking 'Continue' will also log you in and then take you to <em>{continueUrl}</em>.\n                                        </span><br /><br />\n\n                                        {/* place where errors are rendered */}\n                                        <span id='errorRenderSpace' className={uniUX.styles.minorText} style={{ color: 'var(--red)' }}></span>\n\n                                    </div>\n                                </div>\n                            }>\n                            </uniUX.Main>\n                        </body>,\n                        document.getElementById('authActionRenderSpace')\n                    )\n                }\n            })\n        }\n\n\n\n\n        // user wants to verify their Circel ID (email address)?\n        else if (url.searchParams.get('mode') == 'verifyEmail') {\n            ReactDom.render(\n                <body>\n                    <uniUX.Main pageType={'custom'} pageName={'Verify your Circel ID'} content={\n                        <div className={uniUX.styles.halvedPageGrid}>\n                            <div className={uniUX.styles.halvedPageHalf}>\n                                <br /><br />\n                                <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Verify your Circel ID</h1>\n\n                                <input placeholder='New Password' style={{ width: '30vw' }} type='password' id='resetPasswordNewPassword' /><br /><br /><br />\n\n                                <uniUX.PrimaryButton text='Continue' onClick={function () {\n                                    uniUX.completeResetPassword(document.getElementById('resetPasswordNewPassword').value, url.searchParams.get('oobCode')).then(function (result) {\n                                        if (result == 'success') {\n                                            if (url.searchParams.get('continueUrl')) {\n                                                window.open(url.searchParams.get('continueUrl'), '_self')\n                                            }\n                                        } else {\n                                            console.log(result)\n                                            if (result == 'auth/invalid-email') {\n                                                ReactDom.render(<span>That Circel ID doesn't match any Circel account.</span>, document.getElementById('errorRenderSpace'))\n                                            } else if (result == 'auth/wrong-password') {\n                                                ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                                            } else if (result == 'auth/user-disabled') {\n                                                ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                                            } else {\n                                                ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                                            }\n                                        }\n                                    })\n                                }} /><br /><br />\n                                <span className={uniUX.styles.minorText}>\n                                    Clicking 'Continue' will take you to <em>{continueUrl}</em>.\n                                </span><br /><br />\n\n                                {/* place where errors are rendered */}\n                                <span id='errorRenderSpace' className={uniUX.styles.minorText} style={{ color: 'var(--red)' }}></span>\n\n                            </div>\n                        </div>\n                    }>\n                    </uniUX.Main>\n                </body>,\n                document.getElementById('authActionRenderSpace')\n            )\n        }\n    }\n}\n\nexport default Page\n"],"names":["url","Page","render","id","pageType","pageName","content","className","uniUX","componentDidMount","continueUrl","URL","window","location","href","searchParams","get","then","result","ReactDom","style","textAlign","Link","to","document","getElementById","placeholder","width","type","text","onClick","value","open","color","console","log","split","React"],"sourceRoot":""}