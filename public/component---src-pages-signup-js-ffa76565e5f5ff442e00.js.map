{"version":3,"file":"component---src-pages-signup-js-ffa76565e5f5ff442e00.js","mappings":"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","sources":["webpack://circel/./src/pages/signup.js"],"sourcesContent":["import * as React from 'react'\nimport ReactDom from 'react-dom'\nimport * as uniUX from 'uniux'\nimport { Link } from 'gatsby'\nimport * as firebaseSetup from '../components/firebasesetup.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as icons from '@fortawesome/free-solid-svg-icons'\nimport * as brandIcons from '@fortawesome/free-brands-svg-icons'\n\nconst Page = () => {\n  return (\n    <body>\n      <uniUX.Main pageType={'custom'} pageName={'Sign up'} content={\n        <div className={uniUX.styles.halvedPageGrid}>\n          <div className={uniUX.styles.halvedPageHalf} id='halvedPageHalf1' style={{ backgroundColor: 'white' }}>\n            <br /><br />\n            <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Sign up</h1>\n\n            <input placeholder='Email (will be your Circel ID)' style={{ width: '30vw' }} type='email' id='signupPageEmail' /><br /><br />\n\n            <input placeholder='Password' style={{ width: '30vw' }} type='password' id='signupPagePassword' /><br /><br /><br />\n\n            <uniUX.PrimaryButton text='Sign up' onClick={function () {\n              uniUX.signUp(document.getElementById('signupPageEmail').value, document.getElementById('signupPagePassword').value).then(function (result) {\n                if (result == 'success') {\n                  // continue with the signup process\n                  window.open(window.location.href.split('=')[1])\n                  // ReactDom.render(\n                  //   <span>\n                  //     <br /><br />\n                  //     <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Welcome to Circel</h1>\n                  //     <p className={uniUX.styles.minorText}>\n                  //       Thanks for signing up for your Circel account!\n                  //       <br /><br />\n                  //       Click 'Continue' to start the Circel account setup process, or if you'd prefer to do this later, just\n                  //       click 'Skip' below. All of the settings you'll configure can be edited in Settings later.\n                  //       <br /><br />\n                  //       Note: for now this signup process is a work in progress, please check back soon.\n                  //     </p><br /><br /><br />\n\n                  //     <uniUX.PrimaryButton text='Continue' onClick={function () {\n                  //       ReactDom.render(\n                  //         <span>\n                  //           <br /><br />\n                  //           <h1 className={uniUX.styles.bigPageHeader} style={{ textAlign: 'left' }}>Set up </h1>\n                  //           <p className={uniUX.styles.minorText}>\n                  //             Thanks for signing up for your Circel account!\n                  //             <br /><br />\n                  //             Click 'Continue' to start the Circel account setup process, or if you'd prefer to do this later, just\n                  //             click 'Skip' below. All of the settings you'll configure can be edited in Settings later.\n                  //             <br /><br />\n                  //             Note: for now this signup process is a work in progress, please check back soon.\n                  //           </p><br /><br /><br />\n\n                  //           <uniUX.PrimaryButton text='Continue' onClick={function () { }} />\n\n                  //           <uniUX.SecondaryButton text='Skip' onClick={function () { window.open(window.location.href.split('=')[1], '_self') }} /><br /><br />\n\n                  //           <p className={uniUX.styles.minorText}>Clicking 'Skip' will take you back to the page you were on before.</p>\n                  //         </span>, document.getElementById('halvedPageHalf1')\n                  //       )\n                  //     }} />\n\n                  //     <uniUX.SecondaryButton text='Skip' onClick={function () { window.open(window.location.href.split('=')[1], '_self') }} /><br /><br />\n\n                  //     <p className={uniUX.styles.minorText}>Clicking 'Skip' will take you back to the page you were on before.</p>\n                  //   </span>, document.getElementById('halvedPageHalf1')\n                  // )\n                  // document.getElementById('halvedPageSignUp2').style.display = 'none'\n                } else {\n                  console.log(result)\n                  if (result == 'auth/email-already-in-use') {\n                    ReactDom.render(<span>That email is already in use by a Circel account. Click 'Log in instead' to log in.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/weak-password') {\n                    ReactDom.render(<span>That password looks too weak - make sure it's over 6 characters long.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n            }} />\n\n            <uniUX.SecondaryButton text='Log in instead' onClick={function () { window.open('/login?next=' + window.location.href.split('=')[1], '_self', '_self') }} /><br /><br />\n\n            <p className={uniUX.styles.minorText}>By continuing, you confirm you have read and agree to Circel's Terms.</p>\n            <br /><br />\n            <span id='errorRenderSpace' className={uniUX.styles.minorText} style={{ color: 'var(--red)' }}></span>\n          </div>\n\n          <div className={uniUX.styles.halvedPageHalfSignup1} id='halvedPageSignUp2'>\n            <br /><br /><br /><br /><br />\n            <h1 className={uniUX.styles.bigPageHeader} style={{ fontSize: '2.5vw', color: 'white' }}>Sign up a different way</h1>\n\n            <uniUX.SecondaryButton styles={{ width: '25vw', textAlign: 'left', color: 'white' }} onClick={function () {\n              uniUX.logInGoogle().then(function (result) {\n                if (result == 'success') {\n                  window.open(window.location.href.split('=')[1], '_self')\n                } else {\n                  console.log(result)\n                  if (result == 'auth/popup-blocked') {\n                    ReactDom.render(<span>You need to allow the popup to log in with Google.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/wrong-password') {\n                    ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/user-disabled') {\n                    ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n            }} text={<p>&ensp;<FontAwesomeIcon icon={brandIcons.faGoogle} />&emsp;Sign up with Google&ensp;</p>} /><br /><br />\n\n            <uniUX.SecondaryButton styles={{ width: '25vw', textAlign: 'left', color: 'white' }} onClick={function () {\n              uniUX.logInTwitter().then(function (result) {\n                if (result == 'success') {\n                  window.open(window.location.href.split('=')[1], '_self')\n                } else {\n                  console.log(result)\n                  if (result == 'auth/popup-blocked') {\n                    ReactDom.render(<span>You need to allow the popup to log in with Twitter.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/wrong-password') {\n                    ReactDom.render(<span>That password doesn't match your Circel ID - please try again.</span>, document.getElementById('errorRenderSpace'))\n                  } else if (result == 'auth/user-disabled') {\n                    ReactDom.render(<span>This Circel account has been disabled.</span>, document.getElementById('errorRenderSpace'))\n                  } else {\n                    ReactDom.render(<span>An error occurred (<code>{result.split('/')[1]}</code>)</span>, document.getElementById('errorRenderSpace'))\n                  }\n                }\n              })\n            }} text={<p>&ensp;<FontAwesomeIcon icon={brandIcons.faTwitter} />&emsp;Sign up with Twitter&ensp;</p>} /><br /><br />\n          </div>\n        </div>\n      }>\n      </uniUX.Main>\n    </body>\n  )\n}\n\nexport default Page\n"],"names":["pageType","pageName","content","className","uniUX","id","style","backgroundColor","textAlign","placeholder","width","type","text","onClick","document","getElementById","value","then","result","window","open","location","href","split","console","log","ReactDom","color","fontSize","styles","icon","brandIcons"],"sourceRoot":""}